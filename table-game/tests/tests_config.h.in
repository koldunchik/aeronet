/*
 * Copyright (c) 2017, Ivan
 * 
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * * Redistributions of source code must retain the above copyright notice, this
 *   list of conditions and the following disclaimer.
 *
 * * Redistributions in binary form must reproduce the above copyright notice,
 *   this list of conditions and the following disclaimer in the documentation
 *   and/or other materials provided with the distribution.
 *
 * * Neither the name of ofp-pfe nor the names of its
 *   contributors may be used to endorse or promote products derived from
 *   this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#ifndef TG_TESTS_CONFIG_H
#define TG_TESTS_CONFIG_H

#include "tg_types.h"

// Sample files contains smple data to evaluate internal logic
// To allow out of the tree build we need CMake to handle all the relative paths
#define SAMPLE_FILE "@CMAKE_SOURCE_DIR@/tests/sample.txt"

#define SAMPLE_TABLE_SIZE 4
#define SAMPLE_BALLS_COUNT 2
#define SAMPLE_WALLS_COUNT 2

#define SAMPLE_BALL_1 2,2
#define SAMPLE_BALL_2 1,4

#define SAMPLE_BALL_INVALID_1 1,0
#define SAMPLE_BALL_INVALID_2 1,(SAMPLE_TABLE_SIZE+1)

#define SAMPLE_HOLE_1 1,1
#define SAMPLE_HOLE_2 4,3

#define SAMPLE_WALL_1 1,2,1,3
#define SAMPLE_WALL_2 3,2,4,2

const input_data_t sample = { SAMPLE_TABLE_SIZE, SAMPLE_BALLS_COUNT, SAMPLE_WALLS_COUNT,
                         SAMPLE_BALL_1, SAMPLE_BALL_2,
                         SAMPLE_HOLE_1, SAMPLE_HOLE_2,
                         SAMPLE_WALL_1, SAMPLE_WALL_2 };

const input_data_t sample_incomplite_1 = { SAMPLE_TABLE_SIZE, SAMPLE_BALLS_COUNT, SAMPLE_WALLS_COUNT,
                         SAMPLE_BALL_1, SAMPLE_BALL_2,
                         SAMPLE_HOLE_1, SAMPLE_HOLE_2,
                         SAMPLE_WALL_1 };

const input_data_t sample_incomplite_2 = { SAMPLE_TABLE_SIZE, SAMPLE_BALLS_COUNT, SAMPLE_WALLS_COUNT };

const input_data_t sample_too_long = { SAMPLE_TABLE_SIZE, SAMPLE_BALLS_COUNT, SAMPLE_WALLS_COUNT,
                         SAMPLE_BALL_1, SAMPLE_BALL_2,
                         SAMPLE_HOLE_1, SAMPLE_HOLE_2,
                         SAMPLE_WALL_1, SAMPLE_WALL_2, SAMPLE_WALL_2 };

const input_data_t sample_invalid_1 = { SAMPLE_TABLE_SIZE, SAMPLE_BALLS_COUNT, SAMPLE_WALLS_COUNT,
                         SAMPLE_BALL_1, SAMPLE_BALL_INVALID_1,
                         SAMPLE_HOLE_1, SAMPLE_HOLE_2,
                         SAMPLE_WALL_1, SAMPLE_WALL_2 };

const input_data_t sample_invalid_2 = { SAMPLE_TABLE_SIZE, SAMPLE_BALLS_COUNT, SAMPLE_WALLS_COUNT,
                         SAMPLE_BALL_1, SAMPLE_BALL_INVALID_2,
                         SAMPLE_HOLE_1, SAMPLE_HOLE_2,
                         SAMPLE_WALL_1, SAMPLE_WALL_2 };

const input_data_t sample_double_1 = { SAMPLE_TABLE_SIZE, SAMPLE_BALLS_COUNT, SAMPLE_WALLS_COUNT,
                         SAMPLE_BALL_1, SAMPLE_BALL_1,
                         SAMPLE_HOLE_1, SAMPLE_HOLE_2,
                         SAMPLE_WALL_1, SAMPLE_WALL_2 };

const input_data_t sample_double_2 = { SAMPLE_TABLE_SIZE, SAMPLE_BALLS_COUNT, SAMPLE_WALLS_COUNT,
                         SAMPLE_BALL_1, SAMPLE_BALL_2,
                         SAMPLE_HOLE_1, SAMPLE_HOLE_1,
                         SAMPLE_WALL_1, SAMPLE_WALL_2 };

const input_data_t sample_double_3 = { SAMPLE_TABLE_SIZE, SAMPLE_BALLS_COUNT, SAMPLE_WALLS_COUNT,
                         SAMPLE_BALL_1, SAMPLE_BALL_2,
                         SAMPLE_HOLE_1, SAMPLE_HOLE_2,
                         SAMPLE_WALL_1, SAMPLE_WALL_1 };

const input_data_t sample_in_holes = { SAMPLE_TABLE_SIZE, SAMPLE_BALLS_COUNT, SAMPLE_WALLS_COUNT,
                         SAMPLE_BALL_1, SAMPLE_BALL_2,
                         SAMPLE_BALL_1, SAMPLE_HOLE_2,
                         SAMPLE_WALL_1, SAMPLE_WALL_2 };

const input_data_t sample_no_balls = { SAMPLE_TABLE_SIZE, 0, SAMPLE_WALLS_COUNT,
                         SAMPLE_WALL_1, SAMPLE_WALL_1 };


#endif //TG_TESTS_CONFIG_H
